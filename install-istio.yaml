- hosts: openshift
  gather_facts: false
  tasks:
  - name: Set oc binary
    when: oc is not defined
    set_fact:
      oc: "oc"
  - name: Check namespace presence
    command: "{{oc}} get project istio-system"
    register: is_exists
    failed_when: false
  - name: Create istio-system
    when: is_exists.rc != 0
    command: "{{ oc }} new-project istio-system"
  # - name: Setup anyuid
  #   command: "{{ oc }} adm policy add-scc-to-user anyuid -z  {{ item }} -n istio-system"
  #   loop:
  #   - istio-ingress-service-account
  #   - default
  #   - prometheus
  #   - istio-egressgateway-service-account
  #   - istio-citadel-service-account
  #   - istio-ingressgateway-service-account
  #   - istio-cleanup-old-ca-service-account
  #   - istio-mixer-post-install-account
  #   - istio-mixer-service-account
  #   - istio-pilot-service-account
  #   - istio-sidecar-injector-service-account
  #   - istio-galley-service-account
  #   - istio-security-post-install-account
  - name: Setup privileged
    command: "{{ oc }} adm policy add-scc-to-user privileged -z default -n {{ namespace }}"
  - name: Download istio
    uri:
      url: https://github.com/istio/istio/releases/download/{{ istio_version }}/istio-{{ istio_version }}-linux.tar.gz
      dest: /tmp/istio.tar.gz
      status_code: [200, 304]
  - name: Untar Istio
    unarchive:
      src: /tmp/istio.tar.gz
      remote_src: true
      dest: /tmp
  - name: Helm init template
    shell: >
      ~/helm template /tmp/istio-{{ istio_version }}/install/kubernetes/helm/istio-init
      --name istio-init --namespace istio-system |
      {{ oc }} apply -f -
  - name: Copy Istio values
    copy:
      src: istio-values.yaml
      dest: /tmp/istio-values.yaml
  - name: Helm main template
    shell: >
      ~/helm template /tmp/istio-{{ istio_version }}/install/kubernetes/helm/istio
      --name istio --namespace istio-system --values /tmp/istio-values.yaml |
      {{ oc }} apply -f -
  - name: Label namespace for injection
    shell: "{{ oc }} get ns {{ namespace }} -o json | jq '.metadata.labels += { \"istio-injection\" : \"enabled\" }' | {{ oc }} apply -f -"
  - name: Recreate all pods in test namespace
    shell: "{{ oc }} delete po --all -n {{ namespace }}"
  - name: Create route to ingress
    command: "{{ oc }} create route passthrough app --service=istio-ingressgateway --hostname=app.{{ wildcard_domain }} --port=443"
