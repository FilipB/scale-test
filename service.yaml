apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: scale-test
parameters:
- name: DOCKER_REGISTRY
  description: "Local docker registry"
  value: docker-registry.default.svc:5000
- name: NAMESPACE
  description: "Test namespace"
  value: istio-scale
- name: APP_ID
  description: Name of the application
- name: PODS_PER_SERVICE
  description: "Number of pods in each of simulated services"
  value: "1"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_ID}
    name: ${APP_ID}
  spec:
    replicas: ${PODS_PER_SERVICE}
    template:
      metadata:
        labels:
          app: ${APP_ID}
          deploymentconfig: ${APP_ID}
      spec:
        containers:
        - image: ${DOCKER_REGISTRY}/${NAMESPACE}/mannequin:latest
          imagePullPolicy: Always
          name: mannequin
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
                - curl
                - localhost:8080/
              initialDelaySeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        containerNames: [ mannequin ]
        from:
          kind: ImageStreamTag
          name: mannequin:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_ID}
    name: ${APP_ID}
  spec:
    ports:
    - name: http-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_ID}
      deploymentconfig: ${APP_ID}
    sessionAffinity: None
    type: ClusterIP
