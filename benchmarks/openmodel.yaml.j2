name: openmodel
agents:
{% for agent in groups[hyperfoil_agent_group] %}
{%   if hyperfoil_deployer == "k8s" %}
  {{ agent }}:
    node: {{ agent }}
{%   else %}
  {{ agent }}: {{ hostvars[agent]['ansible_host'] }}:{{ hyperfoil_agent_port }}
{%   endif %}
{% endfor %}
threads: 8
http:
{% for index in range(1, (num_apps | int) + 1) %}
- host: https://app-{{ index }}.{{ wildcard_domain }}
{% if (endpoints | length) > 0 %}
  addresses:
{%   for endpoint in endpoints %}
  - {{ endpoint }}:{{ endpoint_port }}
{%   endfor %}
{% endif %}
  sharedConnections: {{ (test_shared_connections | default(100, true)) // (num_apps | int) }}
{% endfor %}
staircase:
  initialRampUpDuration: {{ test_rampup_duration }}
  steadyStateDuration: {{ test_steady_duration }}
  rampUpDuration: 5s
  initialUsersPerSec: {{ test_users_per_sec }}
  incrementUsersPerSec: {{ test_inc_users_per_sec }}
  maxIterations: {{ test_max_iterations | default(30, true) }}
  maxSessions: {{ test_users_per_sec }}
  forks:
    simple: &simple
      weight: 1
      scenario:
      - params: &params
        - randomInt:
            toVar: p
            min: 200
            max: 300
        - randomInt:
            toVar: hostIndex
            min: 1
            max: {{ num_apps }}
        - randomItem:
            list:
              stable: 0.8
              canary: 0.1
              mirror: 0.1
            toVar: variant
      - test:
        - httpRequest:
            GET: /mersennePrime?p=${p}
            authority: app-${hostIndex}.{{ wildcard_domain }}:443
            headers:
              x-variant:
                fromVar: variant
            sla:
              errorRatio: 0.1
            handler:
              header:
              - recordHeaderTime:
                  header: x-envoy-upstream-service-time
                  metric: simple-upstream
                  unit: ms
    proxy: &proxy
      weight: 1
      scenario:
      - params: *params
      - test:
        - httpRequest:
            GET: /proxy?p=${p}&url=http://app-${hostIndex}:8080/mersennePrime?p=${p}
            authority: app-${hostIndex}.{{ wildcard_domain }}:443
            headers:
              x-variant:
                fromVar: variant
            sla:
              errorRatio: 0.1
            handler:
              header:
              - recordHeaderTime:
                  header: x-envoy-upstream-service-time
                  metric: proxy-upstream
                  unit: ms
              - recordHeaderTime:
                  header: x-proxy-service-time
                  metric: proxy-downstream
    db: &db
      weight: 1
      scenario:
      - params: *params
      - test:
        - randomInt:
            toVar: size
            min: 5
            max: 20
        - httpRequest:
            GET: /db?p=${p}&host=app-${hostIndex}&size=${size}
            authority: app-${hostIndex}.{{ wildcard_domain }}:443
            headers:
              x-variant:
                fromVar: variant
            sla:
              errorRatio: 0.1
            handler:
               header:
               - recordHeaderTime:
                   header: x-envoy-upstream-service-time
                   metric: db-upstream
                   unit: ms
               - recordHeaderTime:
                   header: x-db-service-time
                   metric: db-downstream
